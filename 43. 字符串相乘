/*
给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。
*/


class Solution1 {
    public String multiply(String num1, String num2) {
        if(num1.equals("0") || num2.equals("0")){
            return "0";
        }
        if(num2.length() > num1.length()){
            String temp = num2;
            num2 = num1;
            num1 = temp;
        }
        int[] total = new int[num1.length() + num2.length()];
        int length1 = num1.length();
        int length2 = num2.length();
        for(int i = length1 -1; i >=0 ; i -- ){
            int x = num1.charAt(i) - '0';
            for(int j = length2 - 1; j >=0; j -- ){
                int y = num2.charAt(j) - '0';
                total[i + j + 1] += x * y;
            }
        }
        for(int i = length1 + length2 - 1; i > 0; i--){
            total[i - 1] += total[i]/10;
            total[i] = total[i]%10;
        }
        int startPoint = 0;
        for(int i = 0 ; i < length1 + length2 -1; i ++ ){
            if(total[i]!=0){
                startPoint = i;
                break;
            }
            if(i == length1 + length2 -2){
                return total[length1 + length2 -1] + "";
            }
        }
        String ans = "";
        for(int i = startPoint; i < length1 + length2; i ++ ){
            ans = ans + total[i] + "";
        }
        return ans;

        
    }
}


class Solution2 {
    public String multiply(String num1, String num2) {
        String answer = helper(num1, num2);
        if(answer.substring(0,1).equals("0") && answer.substring(0,1).equals(answer.substring(answer.length() - 1, answer.length())) && answer.length() > 1){
            answer = "0";
        }
        return answer;

    }
    public String plus(String s1, String s2){
        String ans = "";
        if(s2.length() < s1.length()){
            int length = s1.length() - s2.length();
            for(int i = 0 ; i < length; i ++ ){
                s2 = "0" + s2;
            }
        }
        if(s1.length() < s2.length()){
            int length = s2.length() - s1.length();
            for(int i = 0 ; i < length; i ++ ){
                s1 = "0" + s1;
            }
        }
        int add = 0 ;
        for(int i = s1.length() - 1; i >=0; i --){
            int first = Integer.parseInt(s1.substring(i, i + 1));
            int second = Integer.parseInt(s2.substring(i , i + 1));
            int current = (first + second + add) %10;
            add = (first + second + add) / 10;
            ans = current + ans + "";
            if(i == 0){
                if(add > 0){
                    ans = add + ans + "";
                }
            }
        }
        return ans;
    }
    public String helper(String s1, String s2){
        String ans = "";
        if(s1.length() < s2.length()){
            String temp = s1;
            s1 = s2;
            s2 = temp;
        }
        int end = s2.length() - 1;
        for(int i = s2.length() - 1; i >=0 ; i -- ){
            int k2 = Integer.parseInt(s2.substring(i, i + 1));
            int add = 0;
            String current = "";
            for(int j = s1.length() - 1; j >=0; j -- ){
                int k1 = Integer.parseInt(s1.substring(j, j + 1));
                int single = (k1 * k2 + add) % 10;
                add = (k1 * k2 + add) / 10;
                
                current = single + current + "";
                
                if(j == 0 && add > 0 ){
                    current = add + current + "";
                }
            }
            for(int g = 0; g < end - i; g ++){
                if(!current.equals("0")){
                    current = current + "0";
                }
            }
            ans = plus(ans, current);
        }
        return ans;
    }
}
